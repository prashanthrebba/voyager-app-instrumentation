{{- range $k, $v := .Values.services }}
{{- if $v.create}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $v.name }}
spec:
{{- if not $v.autoscaling.enabled }}
  replicas: {{ $v.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $v.name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
{{- if $.Values.strategy }}
  strategy:
    {{- toYaml $.Values.strategy | nindent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $v.name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      {{- if $v.gracefulShutdownConfig }}
      terminationGracePeriodSeconds: 85
      {{- end }}
      containers:
        - name: {{ $v.name }}
          image: "{{ $v.image.repository }}:{{ $.Values.image.tag }}"
          {{- if $v.gracefulShutdownConfig }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "20"]
          {{- end }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            {{- toYaml $v.resources | nindent 12 }}
          env:
            - name: {{ $v.env }}
              value: {{ $.Values.appEnvironment }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- end }}
